name: Build and deploy Docker app to Lightsail
on:
  push:
    branches:
      - master
env:
  AWS_REGION: us-east-1
  AWS_LIGHTSAIL_SERVICE_NAME: users
jobs:
  deploy:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: Install AWS Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build Docker Image
        run: docker build -t ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}:latest .
      - name: Push and Deploy
        run: |
          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
          env=${{ env.AWS_REGION }}
          aws lightsail push-container-image \
            --region ${env} \
            --service-name ${service_name} \
            --label ${service_name} \
            --image ${service_name}:latest
          aws lightsail create-container-service-deployment --service-name ${service_name} --cli-input-json '{ "containers": { "${service_name}-container": { "image": "${service_name}:latest", "environment": { "APP_ENV": "release", "NODE_ENV": "production" }, "ports": { "80": "HTTP" } } }, "publicEndpoint": { "containerName": "${service_name}-container", "containerPort": 80, "healthCheck": { "healthyThreshold": 60, "unhealthyThreshold": 60, "timeoutSeconds": 120, "intervalSeconds": 300, "path": "/ping", "successCodes": "200-499" } } }'